var BSS={_get:function(i,n,e,t){return"function"==typeof i?i(n,e,t):i},commit:function(i){this._bindingCache.commit(i)},clear:function(i){this._bindingCache.clear(i);var n=document.querySelector(this.get(i.target));n.innerHTML=""},reapply:function(i){this._bindingCache.reapply(i)},apply:function(i){if(i.id||(i.id=1e12*Math.random()|0),this._bindingCache.clear(i),i.template){var n=this._get(i.template),e=document.querySelector(n);if(null==e)return void console.error("Template not found",n);var t=document.importNode(e.content,!0);this._apply(i,i,t);var r=this._get(i.target),a=document.querySelector(r);if(null==a)return void console.error("Target not found",r);a.parentNode.replaceChild(t,a)}else this._apply(i,i,document)},_apply:function(i,n,e,t,r,a){for(var s=e.querySelectorAll(this._get(i.target,null,t,a)),o=i["in"]?this._get(i["in"],s,t,a):t,c=i.out?this._get(i.out,s,r,a):r,d=a,h=0;h<s.length;h++){var p=s.item(h);if(o instanceof Array){var l=[];for(var h in o)l.push(p.cloneNode(!0));var u=p.parentNode;u.removeChild(p);for(var m in l){var f=l[m],g=this._bindingCache.newBinding(f,o[m],Number(m),i.apply);g.transfer(),this._bindingCache.addApplyBinding(n,g);var _=c instanceof Array?c[m]:c,g=this._bindingCache.newBinding(f,_,Number(m),i.commit,c);if(this._bindingCache.addCommitBinding(n,g),u.appendChild(f),i.recurse)for(var v in i.recurse)this._apply(i.recurse[v],n,f,o[m],_,Number(m))}}else{var g=this._bindingCache.newBinding(p,o,d,i.apply);g.transfer(),this._bindingCache.addApplyBinding(n,g);var g=this._bindingCache.newBinding(p,c,d,i.commit);if(this._bindingCache.addCommitBinding(n,g),i.recurse)for(var v in i.recurse)this._apply(i.recurse[v],n,p,o,c,d)}}},_bindingCache:{applies:{},commits:{},clear:function(i){this.applies[i.id]=this.applies[i.id]?this.applies[i.id].splice():[],this.commits[i.id]=this.commits[i.id]?this.commits[i.id].splice():[]},addApplyBinding:function(i,n){this.applies[i.id].push(n)},addCommitBinding:function(i,n){this.commits[i.id].push(n)},reapply:function(i){this.applies[i.id]&&this.applies[i.id].forEach(function(i){i.transfer()})},commit:function(i){this.commits[i.id]&&this.commits[i.id].forEach(function(i){i.transfer()})},newBinding:function(i,n,e,t,r){var a={element:i,data:n,index:e,fun:t,transfer:function(){this.fun&&this.fun(this.element,this.data,this.index)}};return r&&(a.container=r,i.bss_binding=a,a.remove=function(){this.container.splice(this.index,1)}),a}}};
